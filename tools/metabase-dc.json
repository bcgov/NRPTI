{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "nrpti-metabase"
  },
  "objects": [
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-${SUFFIX}-secret",
        "annotations": {
          "template.openshift.io/expose-password": "{.data['database-password']}",
          "as-copy-of": "template.${NAME}-secret"
        }
      },
      "stringData": {
        "admin-email": "${ADMIN_EMAIL}",
        "admin-password": "${ADMIN_PASSWORD}",
        "admin-username": "${NAME}-admin",
        "database-password": "${DATABASE_PASSWORD}",
        "embedding-secret-key": "${EMBEDDING_SECRET_KEY}"
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-${SUFFIX}",
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "3000-tcp",
            "protocol": "TCP",
            "port": 3000,
            "targetPort": 3000
          }
        ],
        "selector": {
          "name": "${NAME}-${SUFFIX}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}-${SUFFIX}"
      },
      "spec": {
        "host": "${NAME}-${SUFFIX}-${APPLICATION_DOMAIN}",
        "tls": {
          "insecureEdgeTerminationPolicy": "Redirect",
          "termination": "edge"
        },
        "path": "/",
        "to": {
          "kind": "Service",
          "name": "${NAME}-${SUFFIX}"
        },
        "port": {
          "targetPort": "3000-tcp"
        },
        "wildcardPolicy": "None"
      }
    },
    {
      "apiVersion": "v1",
      "kind": "PersistentVolumeClaim",
      "metadata": {
        "name": "${NAME}-${SUFFIX}",
        "annotations": {
          "volume.beta.kubernetes.io/storage-provisioner": "kubernetes.io/glusterfs"
        }
      },
      "spec": {
        "accessModes": [
          "ReadWriteMany"
        ],
        "resources": {
          "requests": {
            "storage": "${METABASE_PVC_SIZE}"
          }
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "app": "${SUFFIX}",
        "name": "${NAME}-${SUFFIX}",
        "role": "${NAME}"
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "maxSurge": "50%",
          "maxUnavailable": 0
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:${VERSION}",
                "namespace": "${TOOLSNAMESPACE}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}-${SUFFIX}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}-${SUFFIX}",
            "labels": {
              "app": "${SUFFIX}",
              "name": "${NAME}-${SUFFIX}",
              "role": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 3000,
                    "protocol": "TCP"
                  }
                ],
                "command": [
                  "bash",
                  "-c",
                  "cd /app && if [[ $PR_ENVIRONMENT == 'true' ]]; then tail -f /dev/null; else java -jar metabase.jar; fi"
                ],
                "env": [
                  {
                    "name": "MB_PASSWORD_COMPLEXITY",
                    "value": "strong"
                  },
                  {
                    "name": "MB_JETTY_HOST",
                    "value": "0.0.0.0"
                  },
                  {
                    "name": "MB_DB_FILE",
                    "value": "/app/data/metabase.db"
                  },
                  {
                    "name": "MB_DB_TYPE",
                    "value": "h2"
                  },
                  {
                    "name": "ENVIRONMENT_NAME",
                    "value": "${ENVIRONMENT_NAME}"
                  },
                  {
                    "name": "MB_ENCRYPTION_SECRET_KEY",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${NAME}-${SUFFIX}-secret",
                        "key": "database-password"
                      }
                    }
                  }
                ],
                "volumeMounts": [
                  {
                    "mountPath": "/app/data",
                    "name": "${NAME}-${SUFFIX}-data"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                },
                "terminationMessagePath": "/dev/termination-log",
                "imagePullPolicy": "IfNotPresent",
                "capabilities": {}
              }
            ],
            "volumes": [
              {
                "name": "${NAME}-${SUFFIX}-data",
                "persistentVolumeClaim": {
                  "claimName": "${NAME}-${SUFFIX}"
                }
              }
            ],
            "restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "CPU_LIMIT",
      "value": "500m"
    },
    {
      "name": "MEMORY_LIMIT",
      "value": "2Gi"
    },
    {
      "name": "CPU_REQUEST",
      "value": "200m"
    },
    {
      "name": "MEMORY_REQUEST",
      "value": "1.5Gi"
    },
    {
      "name": "ENVIRONMENT_NAME",
      "value": "prod"
    },
    {
      "name": "PR_ENVIRONMENT",
      "displayName": "PR Based Environment",
      "description": "A setting to turn off metabase in OpenShift namespaces where resources need to be minimized due to duplication of applications (one for each Pull Request).  Setting the value to 'true' will turn off metabase.",
      "value": "false"
    },
    {
      "name": "NAME",
      "displayName": "Object names",
      "description": "The name of the OpenShift objects.",
      "value": "metabase",
      "required": true
    },
    {
      "name": "VERSION",
      "displayName": "Build Image Stream version",
      "description": "The version of the image stream that this corresponds to.  This should be the same as the VERSION in the metabase build config file.",
      "value": "1",
      "required": true
    },
    {
      "name": "APPLICATION_DOMAIN",
      "value": "metabase-f00029-prod.apps.silver.devops.gov.bc.ca",
      "required": true
    },
    {
      "name": "SUFFIX",
      "displayName": "Name Suffix",
      "description": "A suffix appended to all objects",
      "value": "nrpti",
      "required": true
    },
    {
      "name": "TOOLSNAMESPACE",
      "displayName": "Tools Namespace",
      "description": "The OpenShift project namespace containing the builds and images",
      "value": "f00029-tools",
      "required": true
    },
    {
      "name": "METABASE_PVC_SIZE",
      "value": "2Gi",
      "required": true
    },
    {
      "name": "ADMIN_EMAIL",
      "displayName": "Admin Email",
      "description": "The email associated with the metabase admin user",
      "value": "",
      "required": true
    },
    {
      "name": "ADMIN_PASSWORD",
      "displayName": "Admin Password",
      "description": "The password for the metabase admin user. Requires 2 upper, 2 lower, 1 special, 1 numeric chars and minimum 8 char length",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{8}!@#$%^&_[a-zA-Z0-9]{8}",
      "required": true
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "Database Password",
      "description": "A minimum 16 character password that is generated in the target database, and then copied over into this field.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}",
      "required": true
    },
    {
      "name": "EMBEDDING_SECRET_KEY",
      "displayName": "Embedding Secret Key",
      "description": "A key that is used to embed metabase screens from within a website",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}",
      "required": true
    }
  ]
}
