swagger: "2.0"
info:
  version: "0.0.0"
  title: NRPTI API
host: localhost:3000
basePath: /api
tags:
- name: "search"
  description: "Search operations"
  externalDocs:
    description: "Find out more about our API"
    url: "https://github.com/bcgov/NRPTI.git"
- name: "record"
  description: "Operations on Record objects"
  externalDocs:
    description: "Find out more about our API"
    url: "https://github.com/bcgov/NRPTI.git"
- name: 'task'
  description: 'Operations on tasks'
  externalDocs:
    description: 'Find out more about our API'
    url: 'http://github.com/bcgov/nrptiapi.git'
schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
      For accessing the API, a valid JWT token must be passed in all the queries in
      the 'Authorization' header.

      A valid JWT token is generated by the API automatically via redirect through Keycloak.

      The following syntax must be used in the 'Authorization' header: Bearer xxxxxx.yyyyyyy.zzzzzz

consumes:
  - application/json
produces:
  - application/json

definitions:
### Record Type Definitions
  RecordRequestObject:
    type: object
  RecordResponseObject:
    type: object
  RecordType:
    type: string
    description: "Supported record types"
    example: "order"
    enum: &recordType
      - order
      - inspection
  dataSourceType:
    type: string
    description: "Supported data sources"
    example: "epic"
    enum: &dataSourceType
      - epic

### Search Definitions
  SearchObject:
    type: object
    properties:
      keywords:
        type: string
        example: "Project Name"
  SearchDataSetParams:
    type: string
    description: "Optional datasets to search on in the DB"
    example: ['Order']
    enum: &searchDataSetParams
      - Order
      - Inspection
  SearchSortByFields:
    type: string
    description: "Optional fields to sort by (prefixed with + or - for order)"
    example: +score,-score
    enum: &searchSortByFields
      - +startDate
      - -startDate
      - +headline
      - -headline
      - +score
      - -score
      - +displayName
      - -displayName
      - +datePosted
      - -datePosted
      - +documentType
      - -documentType
      - +documentFileSize
      - -documentFileSize

### Task Definitions
  TaskObject:
    type: object
    example: "A task object"
    properties:
      params:
        type: object
        example: '{"dateSince": "30-10-2019"}'
      recordType:
        type: string
        example: "order"
        enum: *recordType
      dataSourceType:
        type: string
        example: "epic"
        enum: *dataSourceType

### Common Definitions
  Token:
    type: object
    properties:
      token:
        type: string

  Error:
    type: object
    properties:
      message:
        type: string

paths:
  /search:
    x-swagger-router-controller: search
    options:
      tags:
        - search
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on search Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - search
      summary: "Get a list of things related to these keywords"
      operationId: protectedGet
      description: "Retreiving items relating to the given keywords."
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
      parameters:
        - in: query
          name: _id
          description: "Grab (via _id) specific document"
          type: string
          required: false
          items:
            type: string
        - in: query
          name: keywords
          description: "Full Text Search based on keywords"
          type: string
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: populate
          description: "Populate Project object ID"
          type: boolean
          required: false
        - in: query
          name: dataset
          description: "Dataset to search on"
          type: array
          items:
            type: string
            enum: *searchDataSetParams
          required: false
        - in: query
          name: _schemaName
          description: "Schema to search on"
          type: string
          required: false
        - in: query
          name: project
          description: "Project to specifically query"
          type: string
          required: false
        - in: query
          name: pageNum
          description: "Page number to skip to."
          type: number
          required: false
        - in: query
          name: pageSize
          description: "# Records to limit"
          type: number
          required: false
        - in: query
          name: sortBy
          description: "Fields to sort by."
          required: false
          type: array
          items:
            type: string
            enum: *searchSortByFields
        - in: query
          name: and
          collectionFormat: multi
          required: false
          description: "Query: multiple parameter instances are supported using AND."
          type: string
        - in: query
          name: or
          collectionFormat: multi
          required: false
          description: "Query: multiple parameter instances are supported using OR."
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
  /public/search:
    x-swagger-router-controller: search
    options:
      tags:
        - search
      summary: "Pre-flight request"
      operationId: protectedOptions
      description: "Options on search Route"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
    get:
      tags:
        - search
      summary: "Get a list of things related to these keywords"
      operationId: publicGet
      description: "Retreiving items relating to the given keywords."
      parameters:
        - in: query
          name: _id
          description: "Grab (via _id) specific document"
          type: string
          required: false
          items:
            type: string
        - in: query
          name: keywords
          description: "Full Text Search based on keywords"
          type: string
          required: false
          collectionFormat: pipes
          items:
            type: string
        - in: query
          name: populate
          description: "Populate Project object ID"
          type: boolean
          required: false
        - in: query
          name: dataset
          description: "Dataset to search on"
          type: array
          items:
            type: string
            enum: *searchDataSetParams
          required: false
        - in: query
          name: _schemaName
          description: "Schema to search on"
          type: string
          required: false
        - in: query
          name: project
          description: "Project to specifically query"
          type: string
          required: false
        - in: query
          name: pageNum
          description: "Page number to skip to."
          type: number
          required: false
        - in: query
          name: pageSize
          description: "# Records to limit"
          type: number
          required: false
        - in: query
          name: sortBy
          description: "Fields to sort by."
          required: false
          type: array
          items:
            type: string
            enum: *searchSortByFields
        - in: query
          name: and
          collectionFormat: multi
          required: false
          description: "Query: multiple parameter instances are supported using AND."
          type: string
        - in: query
          name: or
          collectionFormat: multi
          required: false
          description: "Query: multiple parameter instances are supported using OR."
          type: string
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/SearchObject"
        "403":
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"
###
### Task Routes
###
  /task:
    x-swagger-router-controller: import-task
    options:
      tags:
        - task
      summary: 'Pre-flight request'
      operationId: protectedOptions
      description: 'Options on authenticated task route'
      responses:
        '200':
          description: 'Success'
        '403':
          description: 'Access Denied'
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - task
      summary: 'Create a new Task'
      operationId: protectedCreateTask
      description: 'Authenticated access to create a Task Worker'
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
      parameters:
        - name: task
          in: body
          description: 'Flag to import records'
          required: true
          schema:
            $ref: "#/definitions/TaskObject"
      responses:
        '200':
          description: 'Success'
        '403':
          description: 'Access Denied'
          schema:
            $ref: '#/definitions/Error'

###
### Record Routes
###
  /record:
    x-swagger-router-controller: record-controller
    options:
      tags:
        - task
      summary: 'Pre-flight request'
      operationId: protectedOptions
      description: 'Options on authenticated task route'
      responses:
        '200':
          description: 'Success'
        '403':
          description: 'Access Denied'
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - record
      summary: 'Create new record(s)'
      operationId: protectedPost
      description: 'Authenticated access to create a record'
      security:
        - Bearer: []
      x-security-scopes:
        - sysadmin
      parameters:
        - in: body
          name: data
          description: "Records in an array that you would like to save"
          required: true
          schema:
            $ref: '#/definitions/RecordRequestObject'
      responses:
        '200':
          description: 'Success'
          schema:
            $ref: '#/definitions/RecordResponseObject'
        '403':
          description: 'Access Denied'
          schema:
            $ref: '#/definitions/Error'

